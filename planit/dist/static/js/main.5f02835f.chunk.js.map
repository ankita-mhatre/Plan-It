{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/project/ProjectSummary.js","components/project/ProjectList.js","components/dashboard/Dashboard.js","components/project/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","store/actions/projectActions.js","components/project/CreateProject.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignedOutLinks","state","firebase","links","uid","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","Dashboard","this","Component","compose","console","log","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstname","lastname","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","firstName","lastName","createProject","authorId","add","Date","CreateProject","history","push","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","reactReduxFirebase","userProfile","useFirestoreForProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5f02835f.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signOut } from '../../store/actions/authActions'\nconst SignedInLinks = (props) => {\n    return (\n    <ul className=\"right\">\n        <li><NavLink to=\"/create\"> New Project</NavLink></li>\n        <li><a onClick={props.signOut}>Log Out</a></li>\n        <li><NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">\n        {props.profile.initials}\n        </NavLink></li>\n    </ul>\n    )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signOut: () => dispatch(signOut())\n    }\n} \nexport default connect(null,mapDispatchToProps)(SignedInLinks);","export const signIn = (credentials) => {\n    return (dispatch, getState, {getFirebase}) => {\n      const firebase = getFirebase();\n      \n      firebase.auth().signInWithEmailAndPassword(\n        credentials.email,\n        credentials.password\n      ).then(() => {\n        dispatch({ type: 'LOGIN_SUCCESS' });\n      }).catch((err) => {\n        dispatch({ type: 'LOGIN_ERROR', err });\n      });\n  \n    }\n  }\n\n  export const signOut = () =>{\n      return (dispatch, getState, {getFirebase}) => {\n          const firebase = getFirebase();\n\n          firebase.auth().signOut().then( () => {\n              dispatch( { type: 'SIGNOUT_SUCCESS'})\n          });\n      }\n  }\n\n  export const signUp = (newUser) => {\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n      const firebase = getFirebase();\n      const firestore = getFirestore();\n  \n      firebase.auth().createUserWithEmailAndPassword(\n        newUser.email, \n        newUser.password\n      ).then(resp => {\n        return firestore.collection('users').doc(resp.user.uid).set({\n          firstName: newUser.firstname,\n          lastName: newUser.lastname,\n          initials: newUser.firstname[0] + newUser.lastname[0]\n        });\n      }).then(() => {\n        dispatch({ type: 'SIGNUP_SUCCESS' });\n      }).catch((err) => {\n        dispatch({ type: 'SIGNUP_ERROR', err});\n      });\n    }\n  }","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nconst SignedOutLinks = () => {\n    return (\n<ul className=\"right\">\n    <li><NavLink to=\"/signin\">Login</NavLink></li>\n    <li><NavLink to=\"/signup\">SignUp</NavLink></li>\n</ul>\n    )\n}\nexport default SignedOutLinks;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport SignedInLinks from './SignedInLinks';\nimport SignedOutLinks from './SignedOutLinks';\nimport { connect } from 'react-redux'\n\nconst Navbar = (props) => {\n    const { auth, profile } = props;\n    const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />;\n    return (\n        <nav className=\"nav-wrappper gradient1 darken-3\">\n            <div className=\"container\">\n                <Link to='/' className=\"brand-logo\">Plan !t</Link>\n                {links}\n\n            </div>\n        </nav>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    // console.log(state)\n    return {\n        auth: state.firebase.auth,\n        profile: state.firebase.profile\n    }\n}\nexport default connect(mapStateToProps)(Navbar);","import React from 'react'\nimport moment from 'moment'\nconst Notifications = (props) => {\n  const { notifications} = props;\n    return (\n      <div className=\"section\">\n        <div className=\"card z-depth-0\">\n          <div className=\"card-content\">\n            <span className=\"card-title\">Notifications</span>\n            <ul className=\"online-users\">\n            { notifications && notifications.map(item =>{\n              return <li key={item.id}>\n                <span className=\"pink-text\">{item.user} </span>\n                <span>{item.content}</span>\n                <div className=\"note-date grey-text\">{moment(item.time.toDate()).fromNow()}</div>\n              </li>\n            })}\n          </ul>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\nexport default Notifications;","import React from 'react'\nimport moment from 'moment'\nconst ProjectSummary = ({project}) => {\n    return(\n            <div className=\"card z-depth-0 project-summary\">\n                <div className=\"card-content grey-text text-darken-3\">\n                    <span className=\"card-title \">{project.title}</span>\n                    <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\n                    <p className=\"grey-text\">{ moment(project.createdAt.toDate()).calendar()}</p>\n                </div>\n            </div>\n    )\n}\nexport default ProjectSummary;","import React from 'react'\nimport ProjectSummary from './ProjectSummary'\nimport { Link } from 'react-router-dom'\nconst ProjectList = ({projects}) => {\n    return (\n        <div className=\"project-list section\">\n           {/* taking individual proj and passing to ProjectSummary */}\n           {projects && projects.map(project => {\n               return( \n                   <Link to={ '/project/' + project.id }>\n                   <ProjectSummary project={project} key={project.id} />\n                   </Link>\n               )\n           })}\n        </div>\n    )\n}\nexport default ProjectList;","import React, {Component} from 'react';\nimport Notifications from './Notifications';\nimport ProjectList from '../project/ProjectList'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'; //higher order component\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom'\n\nclass Dashboard extends Component {\n    render(){\n        // console.log(this.props);\n        const { auth,projects, notifications } = this.props; // destructuring\n        if(!auth.uid) return <Redirect to='/signin/' />\n        return (\n            \n            <div className=\"dashboard container\">\n                <div className=\"row\">\n                    <div className=\"col s12 m6\">\n                        <ProjectList projects= {projects}/>\n                    </div>\n                    <div className=\"col s12 m5 offset-m1\">\n                        <Notifications notifications={notifications}/>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) =>{\n    console.log(state)\n    return{\n        projects: state.firestore.ordered.projects,\n        auth: state.firebase.auth,\n        notifications: state.firestore.ordered.notifications\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n       {collection: 'projects', orderBy: ['createdAt', 'desc']} ,\n       {collection: 'notifications', limit: 5, orderBy: ['time', 'desc']}\n    ])\n)(Dashboard);\n","import React from 'react'\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom'\nimport moment from 'moment'\nconst ProjectDetails = (props) => {\n    // const id = props.match.params.id;\n    const { project, auth } = props;\n\n    if(!auth.uid) return <Redirect to='/signin/' />\n\n\n    if(project) {\n        return(\n <div className=\"container section project-details\">\n        <div className=\"card z-depth-0\">\n          <div className=\"card-content\">\n            <span className=\"card-title\">{project.title}</span>\n            <p>{project.content}</p>\n          </div>\n          <div className=\"card-action grey lighten-4 grey-text\">\n            <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\n            <div>{ moment(project.createdAt.toDate()).calendar() }</div>\n          </div>\n        </div>\n      </div>\n        )\n    }else {\n    return (\n        <div className=\"container center\">\n          <p>Loading project...</p>\n        </div>\n      )\n    }\n}\nconst mapStateToProps = (state, ownProps) => {\n    // console.log(state);\n    const id = ownProps.match.params.id;\n    const projects = state.firestore.data.projects;\n    const project = projects ? projects[id] : null\n    return {\n      project: project,\n      auth: state.firebase.auth\n    }\n  }\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        {collection: 'projects'}\n    ])\n)(ProjectDetails)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { signIn } from '../../store/actions/authActions'\nimport { Redirect } from 'react-router-dom'\n\nclass SignIn extends Component {\n    state = {\n        email: '',\n        password: ''\n    }\n    handleChange = (e) => {\n          this.setState({\n              [e.target.id]: e.target.value\n          })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        // console.log(this.state);\n        this.props.signIn(this.state)\n    }\n\n\n    render() {\n        const { auth } = this.props;\n        if(auth.uid) return <Redirect to='/' />\n\n        const { authError } = this.props; // destructure auth error from props\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className=\"grey-text darken-text-3\">Sign In</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" onChange={this.handleChange} id=\"email\" />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" onChange={this.handleChange} id=\"password\" />\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n                        <div className=\"red-text center\">\n                        { authError ? <p>{authError}</p> : null }\n                        </div>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return{\n      authError: state.auth.authError,\n      auth: state.firebase.auth\n    }\n  }\n\nconst mapDispatchToProps = (dispatch) =>{\n    return {\n        signIn: (creds) => dispatch(signIn(creds))\n    }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(SignIn);\n\n\n","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux';\nimport { signUp } from '../../store/actions/authActions'\n\nclass SignUp extends Component {\n    state = {\n        email: '',\n        password: '',\n        firstname: '',\n        lastname: ''\n    }\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.signUp(this.state);\n        // console.log(this.state);\n    }\n\n\n    render() {\n        const { auth, authError } = this.props;\n        if (auth.uid) return <Redirect to='/' />\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className=\"grey-text darken-text-3\">Sign Up</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" onChange={this.handleChange} id=\"email\" />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" onChange={this.handleChange} id=\"password\" />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"firstname\">First Name</label>\n                        <input type=\"text\" onChange={this.handleChange} id=\"firstname\" />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"lastname\">Last Name</label>\n                        <input type=\"text\" onChange={this.handleChange} id=\"lastname\" />\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\n                        <div className=\"center red-text\">\n                            {authError ? <p>{authError}</p> : null}\n                        </div>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth,\n        authError: state.auth.authError\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signUp: (creds) => dispatch(signUp(creds))\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\n\n\n","export const createProject = (project) => {\n    return (dispatch, getState, { getFirebase, getFirestore}) => {\n      // make async call to database/firestore\n      const firestore = getFirestore();\n    const profile = getState().firebase.profile;\n    const authorId = getState().firebase.auth.uid;\n      firestore.collection('projects').add({\n        ...project,\n        authorFirstName: profile.firstName,\n        authorLastName: profile.lastName,\n        authorId: authorId,\n        createdAt: new Date()\n      }).then(() => {\n        dispatch({ type: 'CREATE_PROJECT', project });\n      }).catch(err => {\n        dispatch({ type: 'CREATE_PROJECT_ERROR' }, err);\n      });\n    }\n  };\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { createProject } from '../../store/actions/projectActions' //action\nimport { Redirect } from 'react-router-dom'\nclass CreateProject extends Component {\n    state = {\n        title: '',\n        content: ''\n    }\n    handleChange = (e) => {\n          this.setState({\n              [e.target.id]: e.target.value\n          })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        // console.log(this.state);\n        this.props.createProject(this.state);\n        //redirect to dashboard\n        this.props.history.push('/');\n    }\n\n\n    render() {\n\n        const { auth } = this.props;\n        if(!auth.uid) return <Redirect to='/signin/' />\n\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className=\"grey-text darken-text-3\">Create New Project</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"title\">Title</label>\n                        <input type=\"text\" onChange={this.handleChange} id=\"title\" />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"content\">Project Content</label>\n                        <textarea id=\"content\"  className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\nconst mapDispatchToProps = (dispatch)  =>{\n    return{\n        createProject: (project) => dispatch(createProject(project))\n    }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(CreateProject)\n\n\n","import React, { Component } from 'react';\nimport { BrowserRouter,Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport ProjectDetails from './components/project/ProjectDetails'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport CreateProject from './components/project/CreateProject'\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar></Navbar>\n          <Switch>\n            <Route exact path=\"/\" component={Dashboard}/>\n            <Route path=\"/project/:id\" component={ProjectDetails} />\n            <Route path=\"/signin\" component={SignIn} />\n            <Route path=\"/signup\" component={SignUp} />\n            <Route path=\"/create\" component={CreateProject} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {}\n\nconst authReducer = (state = initState, action) => {\n    switch (action.type) {\n        case 'LOGIN_ERROR':\n            console.log('login error');\n            return {\n                ...state,\n                authError: 'Login failed'\n            }\n        case 'LOGIN_SUCCESS':\n            console.log('login success');\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNOUT_SUCCESS':\n            console.log('signout success')\n            return state;\n        case 'SIGNUP_SUCCESS':\n            console.log('signup success');\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNUP_ERROR':\n\n            console.log('login error');\n            return {\n                ...state,\n                authError: action.err.message\n            }\n        default:\n            return state\n    }\n};\n\nexport default authReducer;","const initState = {\n    projects: [\n        {id: '1', title: 'help me find peach', content: 'blah blah blah'},\n        {id: '2', title: 'collect all the stars', content: 'blah blah blah'},\n        {id: '3', title: 'egg hunt with yoshi', content: 'blah blah blah'}\n      ]\n}\nconst projectReducer = (state = initState, action) => {\n    switch(action.type){\n        case 'CREATE_PROJECT':\n            console.log('created project', action.project);\n            return state;\n        case 'CREATE_PROJECT_ERROR':\n                console.log('created error', action.err);\n                return state;\n        default:\n            return state;\n    }\n}\nexport default projectReducer;","//combine other two reducers and pass to createStore\n\nimport authReducer from './authReducer'\nimport projectReducer from './projectReducer'\nimport {combineReducers} from 'redux'\nimport { firestoreReducer } from 'redux-firestore'; // syn firestore and state\nimport { firebaseReducer } from 'react-redux-firebase'\nconst rootReducer = combineReducers({\n    auth : authReducer,\n    project : projectReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer\n})\n\nexport default rootReducer;","  import firebase from 'firebase/app';\n  import 'firebase/firestore';\n  import 'firebase/auth';\n\n  var firebaseConfig = {\n    apiKey: \"AIzaSyCKtb3h-iaMjnYcyvhXmEH6PHDwqrBCwBg\",\n    authDomain: \"plan-it-7c1fa.firebaseapp.com\",\n    databaseURL: \"https://plan-it-7c1fa.firebaseio.com\",\n    projectId: \"plan-it-7c1fa\",\n    storageBucket: \"plan-it-7c1fa.appspot.com\",\n    messagingSenderId: \"160136752723\",\n    appId: \"1:160136752723:web:faa488c7617171b194a0a6\",\n    measurementId: \"G-19M8JVMS71\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n  firebase.firestore().settings({timestampsInSnapshots: true});\n//   firebase.analytics();\n\n  export default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'; //applyMiddleware enhances store\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider } from 'react-redux' //bidding layer -> our redux to react\nimport thunk from 'redux-thunk' // middleware\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport firebase from './config/fbConfig';\n\nconst store = createStore(rootReducer,\n    compose(\n        applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n        reduxFirestore(firebase),\n        reactReduxFirebase(firebase, { userProfile: 'users', useFirestoreForProfile: true, attachAuthIsReady: true })\n    )\n);\n\n// wait to render till firebase response is ready\nstore.firebaseAuthIsReady.then(() => {\n    ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n    // If you want your app to work offline and load faster, you can change\n    // unregister() to register() below. Note this comes with some pitfalls.\n    // Learn more about service workers: https://bit.ly/CRA-PWA\n    serviceWorker.unregister();\n})\n\n"],"sourceRoot":""}